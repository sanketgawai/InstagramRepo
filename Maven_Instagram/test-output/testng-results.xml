<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-12-21T19:30:47 IST" name="Suite" finished-at="2023-12-21T19:30:55 IST" duration-ms="7819">
    <groups>
    </groups>
    <test started-at="2023-12-21T19:30:47 IST" name="Test" finished-at="2023-12-21T19:30:55 IST" duration-ms="7819">
      <class name="test.Testt">
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.Testt@67d48005]" started-at="2023-12-21T19:30:47 IST" name="openBrowser" finished-at="2023-12-21T19:30:48 IST" duration-ms="936" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method is-config="true" signature="objectOfClass()[pri:0, instance:test.Testt@67d48005]" started-at="2023-12-21T19:30:48 IST" name="objectOfClass" finished-at="2023-12-21T19:30:48 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objectOfClass -->
        <test-method is-config="true" signature="openApplication()[pri:0, instance:test.Testt@67d48005]" started-at="2023-12-21T19:30:48 IST" name="openApplication" finished-at="2023-12-21T19:30:50 IST" duration-ms="1980" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="checkErrorMassage()[pri:0, instance:test.Testt@67d48005]" started-at="2023-12-21T19:30:50 IST" name="checkErrorMassage" finished-at="2023-12-21T19:30:52 IST" duration-ms="1882" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkErrorMassage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.Testt@67d48005]" started-at="2023-12-21T19:30:52 IST" name="afterMethod" finished-at="2023-12-21T19:30:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkErrorMassage status=SUCCESS method=Testt.checkErrorMassage()[pri:0, instance:test.Testt@67d48005] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="openApplication()[pri:0, instance:test.Testt@67d48005]" started-at="2023-12-21T19:30:52 IST" name="openApplication" finished-at="2023-12-21T19:30:52 IST" duration-ms="729" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="makeErrorMassageFailWithWrongExpResult()[pri:0, instance:test.Testt@67d48005]" started-at="2023-12-21T19:30:52 IST" name="makeErrorMassageFailWithWrongExpResult" finished-at="2023-12-21T19:30:55 IST" duration-ms="2091" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Sorr, your password was incorrect. Please double-check your password.] but found [Sorry, your password was incorrect. Please double-check your password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Sorr, your password was incorrect. Please double-check your password.] but found [Sorry, your password was incorrect. Please double-check your password.]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at test.Testt.makeErrorMassageFailWithWrongExpResult(Testt.java:98)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makeErrorMassageFailWithWrongExpResult -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.Testt@67d48005]" started-at="2023-12-21T19:30:55 IST" name="afterMethod" finished-at="2023-12-21T19:30:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=makeErrorMassageFailWithWrongExpResult status=FAILURE method=Testt.makeErrorMassageFailWithWrongExpResult()[pri:0, instance:test.Testt@67d48005] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="clearPomObjects()[pri:0, instance:test.Testt@67d48005]" started-at="2023-12-21T19:30:55 IST" name="clearPomObjects" finished-at="2023-12-21T19:30:55 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearPomObjects -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:test.Testt@67d48005]" started-at="2023-12-21T19:30:55 IST" name="afterTest" finished-at="2023-12-21T19:30:55 IST" duration-ms="156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- test.Testt -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
